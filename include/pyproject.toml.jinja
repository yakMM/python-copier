[project]
name = "{{ project_name }}"
version = "0.1"
description = "{{ project_description }}"
authors = [
    {name = "YakMM", email = "yak.mayam@gmail.com"},
]
requires-python = "=={{ python_version }}.*"
readme = "README.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.dev-dependencies]
nox = [
    "nox==2024.4.15",
]
lint = [
    "slotscheck==0.19.0",
    "ruff==0.4.1",
    # Custom sort-all fork
    "sort-all @ git+https://github.com/yakMM/sort-all",
]
types = [
    "mypy==1.9.0",
]
test = [
    "pytest==8.1.1",
    "coverage==7.5.0",
]

[tool.pdm.scripts]
l = "nox -s lint"
m = "nox -s mypy"
t = "nox -s test -- {args}"
d = "nox -s docs"
n = "nox {args}"
qn = "nox -s lint slots mypy"
cup = {cmd = "copier update -A --vcs-ref=HEAD"}

[tool.coverage.report]
exclude_lines = ["if t.TYPE_CHECKING:", "@t.overload", "@abstractmethod"]

[tool.ruff]
line-length = {{ max_line_length }}
target-version = "py{{ python_version.replace('.', '') }}"

[tool.ruff.lint]
# We select all rules then ignore the one we don't want
select = ["ALL"]
ignore = [
    "COM",      # Commas
    "CPY",      # Copyright
    "INP",      # No-pep420
    "TCH",      # Type-checking, don't want to nest imports under TYPE_CHECKING
    "SLF",      # Self
    "TD",       # Todos
    "FIX",      # Fix-me
    "S101",     # assert, used for type-checking
    "ANN401",   # dynamic typing, already checked by mypy
    "ANN101",   # missing-type-self
    "ANN102",   # missing-type-cls
    "D1",       # Missing docstring
]
preview = true

[tool.ruff.lint.per-file-ignores]
"test.py" = ["ERA001"]
"tests/*" = ["ARG", "PLR0913", "PLC1901", "PLR6301", "PLC2701"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.slotscheck]
require-subclass = true
strict-imports = true

[tool.mypy]
python_version = "{{ python_version }}"

# Dynamic typing
disallow_any_unimported = true
# disallow_any_expr = true
disallow_any_decorated = true
disallow_any_explicit = true
disallow_any_generics = true
disallow_subclassing_any = true

# Untyped definitions and calls
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

# Warnings
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true

# Miscellaneous
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = true
strict_equality = true

# Configuring error messages
show_error_context = true
show_column_numbers = true
pretty = true

# Some more error codes
enable_error_code = [
    "redundant-self",
    "redundant-expr",
    "possibly-undefined",
    "truthy-bool",
    "truthy-iterable",
    "ignore-without-code",
    "unused-awaitable",
    "unused-ignore",
    "explicit-override",
    "unimported-reveal",
]
